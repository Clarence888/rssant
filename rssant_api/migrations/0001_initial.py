# Generated by Django 2.1.7 on 2019-02-23 15:31

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_created', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('_updated', models.DateTimeField(auto_now=True, help_text='更新时间')),
                ('url', models.TextField(help_text='供稿地址', unique=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('updating', 'updating'), ('ready', 'ready'), ('error', 'error')], default='pending', help_text='状态', max_length=20)),
                ('title', models.CharField(blank=True, help_text='标题', max_length=200, null=True)),
                ('link', models.TextField(blank=True, help_text='网站链接', null=True)),
                ('author', models.CharField(blank=True, help_text='作者', max_length=200, null=True)),
                ('icon', models.TextField(blank=True, help_text='网站Logo或图标', null=True)),
                ('description', models.TextField(blank=True, help_text='描述或小标题', null=True)),
                ('version', models.CharField(blank=True, help_text='供稿格式/RSS/Atom', max_length=200, null=True)),
                ('dt_updated', models.DateTimeField(blank=True, help_text='更新时间', null=True)),
                ('dt_created', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('dt_checked', models.DateTimeField(blank=True, help_text='最近一次检查同步时间', null=True)),
                ('dt_synced', models.DateTimeField(blank=True, help_text='最近一次同步时间', null=True)),
                ('encoding', models.CharField(blank=True, help_text='编码', max_length=200, null=True)),
                ('etag', models.CharField(blank=True, help_text='HTTP response header ETag', max_length=200, null=True)),
                ('last_modified', models.CharField(blank=True, help_text='HTTP response header Last-Modified', max_length=200, null=True)),
                ('content_length', models.IntegerField(blank=True, help_text='length of content', null=True)),
                ('content_hash_method', models.CharField(blank=True, help_text='hash method of content', max_length=20, null=True)),
                ('content_hash_value', models.BinaryField(blank=True, help_text='hash value of content', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeedUrlMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_created', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('_updated', models.DateTimeField(auto_now=True, help_text='更新时间')),
                ('source', models.TextField(help_text='起始地址')),
                ('target', models.TextField(help_text='供稿地址')),
                ('dt_created', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='RawFeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_created', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('_updated', models.DateTimeField(auto_now=True, help_text='更新时间')),
                ('url', models.TextField(help_text='供稿地址')),
                ('encoding', models.CharField(blank=True, help_text='编码', max_length=200, null=True)),
                ('status_code', models.IntegerField(blank=True, help_text='HTTP状态码', null=True)),
                ('etag', models.CharField(blank=True, help_text='HTTP response header ETag', max_length=200, null=True)),
                ('last_modified', models.CharField(blank=True, help_text='HTTP response header Last-Modified', max_length=200, null=True)),
                ('headers', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='HTTP response headers, JSON object', null=True)),
                ('content', models.BinaryField(blank=True, null=True)),
                ('content_length', models.IntegerField(blank=True, help_text='length of content', null=True)),
                ('content_hash_method', models.CharField(blank=True, help_text='hash method of content', max_length=20, null=True)),
                ('content_hash_value', models.BinaryField(blank=True, help_text='hash value of content', max_length=200, null=True)),
                ('dt_created', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rssant_api.Feed')),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_created', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('_updated', models.DateTimeField(auto_now=True, help_text='更新时间')),
                ('unique_id', models.CharField(help_text='Unique ID', max_length=200)),
                ('title', models.CharField(blank=True, help_text='标题', max_length=200, null=True)),
                ('link', models.TextField(blank=True, help_text='文章链接', null=True)),
                ('author', models.CharField(blank=True, help_text='作者', max_length=200, null=True)),
                ('dt_published', models.DateTimeField(blank=True, help_text='发布时间', null=True)),
                ('dt_updated', models.DateTimeField(blank=True, help_text='更新时间', null=True)),
                ('dt_created', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('dt_synced', models.DateTimeField(blank=True, help_text='最近一次同步时间', null=True)),
                ('summary', models.TextField(blank=True, help_text='摘要或较短的内容', null=True)),
                ('content', models.TextField(blank=True, help_text='文章内容', null=True)),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rssant_api.Feed')),
            ],
        ),
        migrations.CreateModel(
            name='UserFeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_created', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('_updated', models.DateTimeField(auto_now=True, help_text='更新时间')),
                ('status', models.CharField(choices=[('pending', 'pending'), ('updating', 'updating'), ('ready', 'ready'), ('error', 'error')], default='pending', help_text='状态', max_length=20)),
                ('url', models.TextField(help_text='用户输入的供稿地址')),
                ('title', models.CharField(blank=True, help_text='用户设置的标题', max_length=200, null=True)),
                ('dt_created', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('feed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rssant_api.Feed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserStory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_created', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('_updated', models.DateTimeField(auto_now=True, help_text='更新时间')),
                ('dt_created', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('is_readed', models.BooleanField(default=False)),
                ('dt_readed', models.DateTimeField(blank=True, help_text='已读时间', null=True)),
                ('is_favorited', models.BooleanField(default=False)),
                ('dt_favorited', models.DateTimeField(blank=True, help_text='标星时间', null=True)),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rssant_api.Feed')),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rssant_api.Story')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rssant_api.UserFeed')),
            ],
        ),
        migrations.AddIndex(
            model_name='feedurlmap',
            index=models.Index(fields=['source', 'dt_created'], name='rssant_api__source_dee868_idx'),
        ),
        migrations.AddIndex(
            model_name='feed',
            index=models.Index(fields=['url'], name='rssant_api__url_2171d5_idx'),
        ),
        migrations.AddIndex(
            model_name='userstory',
            index=models.Index(fields=['user', 'feed', 'story'], name='rssant_api__user_id_c419be_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userstory',
            unique_together={('user', 'story')},
        ),
        migrations.AddIndex(
            model_name='userfeed',
            index=models.Index(fields=['user', 'feed'], name='rssant_api__user_id_080db9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userfeed',
            unique_together={('user', 'feed')},
        ),
        migrations.AddIndex(
            model_name='story',
            index=models.Index(fields=['feed', 'dt_updated'], name='rssant_api__feed_id_ed929c_idx'),
        ),
        migrations.AddIndex(
            model_name='story',
            index=models.Index(fields=['feed', 'unique_id'], name='rssant_api__feed_id_059355_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='story',
            unique_together={('feed', 'unique_id')},
        ),
        migrations.AddIndex(
            model_name='rawfeed',
            index=models.Index(fields=['feed', 'status_code', 'dt_created'], name='rssant_api__feed_id_0398a6_idx'),
        ),
        migrations.AddIndex(
            model_name='rawfeed',
            index=models.Index(fields=['url', 'status_code', 'dt_created'], name='rssant_api__url_677f80_idx'),
        ),
    ]
